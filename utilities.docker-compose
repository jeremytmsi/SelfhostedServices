services:
  traefik:
    image: traefik
    container_name: traefik
    ports:
      - 80:80
      - 443:443
    networks:
      - front
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - traefik_certificates:/letsencrypt
    labels:
      - traefik.enable=true
      - traefik.http.routers.traefik-interne.rule=Host(`traefik.${LAN_BASE_HOST}`)
      - traefik.http.routers.traefik-interne.entrypoints=web
      - traefik.http.routers.traefik-interne.service=api@internal
      - traefik.http.services.traefik-interne.loadbalancer.server.port=8080

    command:
      - --providers.docker=true
      - --providers.docker.defaultRule=Host(`{{trimPrefix '/' .Name}}.docker.localhost`)
      - --providers.docker.exposedByDefault=false
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --certificatesResolvers.myresolver.acme.dnschallenge.provider=ovh
      - --certificatesResolvers.myresolver.acme.email=jeremy.tomasi.pro@gmail.com
      - --certificatesResolvers.myresolver.acme.storage=/letsencrypt/acme.json
      - --api.insecure=true

  adguard:
    image: adguard/adguardhome
    container_name: adguard
    ports:
      - 53:53/udp
      - 53:53/tcp
      - 3000:3000
    volumes:
      - adguard_config:/opt/adguardhome/conf
    labels:
      - traefik.enable=true
      - traefik.http.routers.adguard.rule=Host(`adguard.${LAN_BASE_HOST}`)
      - traefik.http.routers.adguard.entrypoints=web
      - traefik.http.services.adguard.loadbalancer.server.port=3000
    networks:
      - front

  vault:
    image: vaultwarden/server
    container_name: vault
    volumes:
      - vault_data:/data
    networks:
      - front
    labels:
      - traefik.enable=true
      - traefik.http.routers.vault.rule=Host(`vault.${LAN_BASE_HOST}`)
      - traefik.http.routers.vault.entrypoints=websecure
      - traefik.http.routers.vault.tls.certresolver=myresolver

networks:
  front:
    external: true

volumes:
  adguard_config:
  traefik_certificates:
  vault_data:
